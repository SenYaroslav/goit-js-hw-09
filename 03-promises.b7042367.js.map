{"mappings":"YAAA,IAAMA,EAAO,CACXC,SAAUC,SAASC,cAAc,SACjCC,gBAAiBF,SAASC,cAAc,kBACxCE,eAAgBH,SAASC,cAAc,iBACvCG,YAAaJ,SAASC,cAAc,mBACpCI,SAAUL,SAASC,cAAc,oBAG/BK,EAAQ,KACRC,EAAO,KACPC,EAAS,KAIb,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAY,CAAEF,WAAUG,MAAAF,GACxBG,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQN,GAERO,EAAOP,E,GAERD,E,IAbPb,EAAKC,SAASsB,iBAAiB,SAiB/B,WACEf,GAASR,EAAKI,gBAAgBoB,MAC9Bd,GAAUV,EAAKM,YAAYkB,MAC3Bf,GAAQT,EAAKK,eAAemB,K,IAnB9BxB,EAAKC,SAASsB,iBAAiB,UAsB/B,SAAkBE,GAChBA,EAAIC,iBAEJ,IAAK,IAAIC,EAAI,EAAGA,GAAKjB,EAAQiB,GAAK,EAChChB,EAAcgB,EAAGnB,GACdoB,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUkB,EAAKD,EAALd,MACjBgB,QAAQC,IAAI,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANH,EAAM,M,IAE3DI,OAAM,SAAAL,G,IAAGjB,EAAQiB,EAARjB,SAAUuB,EAAKN,EAALd,MAClBgB,QAAQC,IAAI,sBAAqCC,OAAfrB,EAAS,QAAYqB,OAANE,EAAM,M,IAE3D3B,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  userForm: document.querySelector('.form'),\n  firstDelayInput: document.querySelector('[name=\"delay\"]'),\n  delayStepInput: document.querySelector('[name=\"step\"]'),\n  amountInput: document.querySelector('[name=\"amount\"]'),\n  startBtn: document.querySelector('[type=\"submit\"]'),\n};\n\nlet delay = null;\nlet step = null;\nlet amount = null;\nrefs.userForm.addEventListener('input', onInput);\nrefs.userForm.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  const resultObj = { position, delay };\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(resultObj);\n      } else {\n        reject(resultObj);\n      }\n    }, delay);\n  });\n}\n\nfunction onInput() {\n  delay = +refs.firstDelayInput.value;\n  amount = +refs.amountInput.value;\n  step = +refs.delayStepInput.value;\n}\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$refs","userForm","document","querySelector","firstDelayInput","delayStepInput","amountInput","startBtn","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","resultObj","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","value","evt","preventDefault","i","then","param","delay2","console","log","concat","catch","delay3"],"version":3,"file":"03-promises.b7042367.js.map"}